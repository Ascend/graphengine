cmake_minimum_required(VERSION 3.14)
project (GraphEngine[CXX])

set(GE_CODE_DIR ${CMAKE_CURRENT_LIST_DIR})

if (NOT BUILD_PATH)
    set(BUILD_PATH "${CMAKE_SOURCE_DIR}/build")
endif()

option(ENABLE_OPEN_SRC "Enable graphengine compile in opensource." FALSE)

if (ENABLE_OPEN_SRC)
    set(HI_PYTHON python3.7)

    include(cmake/external_libs/protobuf_shared.cmake)
    include(cmake/external_libs/protoc.cmake)
    include(cmake/external_libs/gflags.cmake)
    include(cmake/external_libs/securec.cmake)
    include(cmake/external_libs/json.cmake)
    include(cmake/FindModule.cmake)
    include(cmake/intf_pub_linux.cmake)

    if(DEFINED ENV{ASCEND_CUSTOM_PATH})
        set(ASCEND_DIR $ENV{ASCEND_CUSTOM_PATH})
    else()
        set(ASCEND_DIR /usr/local/Ascend)
    endif()

    set(ASCEND_DRIVER_DIR ${ASCEND_DIR}/driver/lib64)
    set(ASCEND_DRIVER_COMMON_DIR ${ASCEND_DIR}/driver/lib64/common)
    set(ASCEND_RUNTIME_DIR ${ASCEND_DIR}/fwkacllib/lib64)
    set(ASCEND_ATC_DIR ${ASCEND_DIR}/atc/lib64)
    find_module(slog libslog.so ${ASCEND_DRIVER_DIR})
    find_module(mmpa libmmpa.so ${ASCEND_DRIVER_DIR})
    find_module(msprof libmsprof.so ${ASCEND_DRIVER_DIR})
    find_module(hccl libhccl.so ${ASCEND_RUNTIME_DIR})
    find_module(adump_server libadump_server.a ${ASCEND_RUNTIME_DIR})
    find_module(runtime libruntime.so ${ASCEND_RUNTIME_DIR})
    find_module(runtime_compile libruntime_compile.so ${ASCEND_ATC_DIR})
    find_module(resource libresource.so ${ASCEND_RUNTIME_DIR})
    find_module(error_manager liberror_manager.so ${ASCEND_RUNTIME_DIR})
    find_module(ascend_hal_stub libascend_hal.so ${ASCEND_DRIVER_DIR})

    set(METADEF_DIR ${CMAKE_CURRENT_LIST_DIR}/metadef)
    set(PARSER_DIR ${CMAKE_CURRENT_LIST_DIR}/parser)
    set(GE_DEPEND_DIR ${CMAKE_CURRENT_LIST_DIR}/..)

    add_subdirectory(metadef)
    add_subdirectory(parser)
    #add_subdirectory(metadef/graph)
    #add_subdirectory(metadef/register)
else()
    set(METADEF_DIR ${CMAKE_CURRENT_LIST_DIR}/../metadef)
    set(PARSER_DIR ${CMAKE_CURRENT_LIST_DIR}/../parser)
    set(GE_DEPEND_DIR ${CMAKE_CURRENT_LIST_DIR}/..)
endif()

add_subdirectory(ge)
